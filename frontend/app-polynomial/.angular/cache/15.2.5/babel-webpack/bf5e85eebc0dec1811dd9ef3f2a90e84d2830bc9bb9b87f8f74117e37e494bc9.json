{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SeparatorksPipe {\n  transform(value) {\n    if (value.length > 18) return \"ERROR\";\n    let numero = value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    let dot = false;\n    let mitad1 = '';\n    let mitad2 = '';\n    for (let index = 0; index < numero.length; index++) {\n      if (dot) {\n        if (numero[index] !== ',') mitad2 += numero[index];\n      } else {\n        mitad1 += numero[index];\n        if (numero[index] === '.') dot = true;\n      }\n    }\n    return mitad1 + mitad2;\n  }\n}\nSeparatorksPipe.ɵfac = function SeparatorksPipe_Factory(t) {\n  return new (t || SeparatorksPipe)();\n};\nSeparatorksPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"separatorks\",\n  type: SeparatorksPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,eAAe;EAE1BC,SAAS,CAACC,KAAa;IACrB,IAAGA,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE,OAAO,OAAO;IACpC,IAAIC,MAAM,GAAGF,KAAK,CAACG,OAAO,CAAC,uBAAuB,EAAE,GAAG,CAAC;IACxD,IAAIC,GAAG,GAAG,KAAK;IACf,IAAIC,MAAM,GAAG,EAAE;IACf,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGL,MAAM,CAACD,MAAM,EAAEM,KAAK,EAAE,EAAE;MAClD,IAAGH,GAAG,EACN;QACE,IAAGF,MAAM,CAACK,KAAK,CAAC,KAAK,GAAG,EAAED,MAAM,IAAIJ,MAAM,CAACK,KAAK,CAAC;OAClD,MACG;QACFF,MAAM,IAAIH,MAAM,CAACK,KAAK,CAAC;QACvB,IAAGL,MAAM,CAACK,KAAK,CAAC,KAAK,GAAG,EAAEH,GAAG,GAAG,IAAI;;;IAGxC,OAAOC,MAAM,GAAGC,MAAM;EACxB;;AAnBWR,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;;QAAfA,eAAe;EAAAU;AAAA","names":["SeparatorksPipe","transform","value","length","numero","replace","dot","mitad1","mitad2","index","pure"],"sourceRoot":"","sources":["C:\\Users\\HP EliteBook 840 G6\\Downloads\\Calculator-master\\Calculator-master\\src\\app\\pipes\\separatorks.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'separatorks'\n})\nexport class SeparatorksPipe implements PipeTransform {\n\n  transform(value: string): string {\n    if(value.length > 18) return \"ERROR\";\n    let numero = value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    let dot = false;\n    let mitad1 = '';\n    let mitad2 = '';\n    for (let index = 0; index < numero.length; index++) {\n      if(dot)\n      {\n        if(numero[index] !== ',') mitad2 += numero[index];\n      }\n      else{\n        mitad1 += numero[index];\n        if(numero[index] === '.') dot = true;\n      }\n    }\n    return mitad1 + mitad2;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}