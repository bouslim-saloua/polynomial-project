{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class HistoriqueService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:8888/historiques';\n    this.historiqueSubject = new BehaviorSubject([]);\n    this.historique$ = this.historiqueSubject.asObservable();\n  }\n  getHistoriqueByUtilisateur(id) {\n    return this.http.get(`${this.apiUrl}/utilisateur/${id}`);\n  }\n  saveHistorique(utilisateurId, calculId) {\n    const url = `http://localhost:8888/historiques/${utilisateurId}/${calculId}`;\n    // Créer un objet pour l'historique, incluant la date actuelle\n    const historiqueData = {\n      utilisateurId,\n      calculId,\n      date: new Date().toISOString() // La date actuelle au format ISO\n    };\n    // Effectuer la requête HTTP POST avec l'objet contenant les informations et la date\n    return this.http.post(url, historiqueData);\n  }\n}\nHistoriqueService.ɵfac = function HistoriqueService_Factory(t) {\n  return new (t || HistoriqueService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nHistoriqueService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HistoriqueService,\n  factory: HistoriqueService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;;;;AAclD,OAAM,MAAOC,iBAAiB;EAI5BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,SAAI,GAAJD,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IAHjD,WAAM,GAAG,mCAAmC;IAC5C,sBAAiB,GAAG,IAAIJ,eAAe,CAAQ,EAAE,CAAC;IAC1D,gBAAW,GAAG,IAAI,CAACK,iBAAiB,CAACC,YAAY,EAAE;EAEnD;EACAC,0BAA0B,CAACC,EAAU;IACnC,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,gBAAgBF,EAAE,EAAE,CAAC;EAC1D;EAEAG,cAAc,CAACC,aAAqB,EAAEC,QAAgB;IACpD,MAAMC,GAAG,GAAG,qCAAqCF,aAAa,IAAIC,QAAQ,EAAE;IAE5E;IACA,MAAME,cAAc,GAAG;MACrBH,aAAa;MACbC,QAAQ;MACRG,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC;KAChC;IAED;IACA,OAAO,IAAI,CAACf,IAAI,CAACgB,IAAI,CAAML,GAAG,EAAEC,cAAc,CAAC;EACjD;;AAtBWd,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAmB,SAAjBnB,iBAAiB;EAAAoB,YAFhB;AAAM","names":["BehaviorSubject","HistoriqueService","constructor","http","authService","historiqueSubject","asObservable","getHistoriqueByUtilisateur","id","get","apiUrl","saveHistorique","utilisateurId","calculId","url","historiqueData","date","Date","toISOString","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP EliteBook 840 G6\\Desktop\\s1\\AC\\project\\polynomial-project\\frontend\\app-polynomial\\src\\app\\services\\historique.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\ninterface Historique {\n  id?: number;\n  expression: string;\n  resultat: string;\n  dateCalcul?: Date;\n  utilisateurId?: number;\n  calculId?: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoriqueService {\n  private apiUrl = 'http://localhost:8888/historiques';\n  private historiqueSubject = new BehaviorSubject<any[]>([]);\n  historique$ = this.historiqueSubject.asObservable();\n  constructor(private http: HttpClient, private authService: AuthService) {\n  }\n  getHistoriqueByUtilisateur(id: number): Observable<any> {\n    return this.http.get(`${this.apiUrl}/utilisateur/${id}`);\n  }\n\n  saveHistorique(utilisateurId: number, calculId: number): Observable<any> {\n    const url = `http://localhost:8888/historiques/${utilisateurId}/${calculId}`;\n    \n    // Créer un objet pour l'historique, incluant la date actuelle\n    const historiqueData = {\n      utilisateurId,\n      calculId,\n      date: new Date().toISOString() // La date actuelle au format ISO\n    };\n  \n    // Effectuer la requête HTTP POST avec l'objet contenant les informations et la date\n    return this.http.post<any>(url, historiqueData);\n  }\n  \n  \n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}