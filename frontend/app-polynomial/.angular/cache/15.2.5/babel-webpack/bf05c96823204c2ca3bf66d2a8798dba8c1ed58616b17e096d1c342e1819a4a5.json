{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8088/api/auth'; // Remplacez par l'URL de votre API\n  }\n  // Méthode pour se connecter\n  login(credentials) {\n    return this.http.post(`${this.apiUrl}/signin`, credentials);\n  }\n  // Méthode pour s'inscrire\n  register(userData) {\n    return this.http.post(`${this.apiUrl}/signup`, userData);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAG,gCAAgC,CAAC,CAAC;EAEZ;EAEvC;EACAC,KAAK,CAACC,WAAmD;IACvD,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,EAAEF,WAAW,CAAC;EAC7D;EAEA;EACAG,QAAQ,CAACC,QAAa;IACpB,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,MAAM,SAAS,EAAEE,QAAQ,CAAC;EAC1D;;AAbWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["AuthService","constructor","http","login","credentials","post","apiUrl","register","userData","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP EliteBook 840 G6\\Desktop\\s1\\AC\\project\\polynomial-project\\frontend\\app-polynomial\\src\\app\\services\\auth.service.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root', // Fournisseur global (disponible dans toute l'application)\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:8088/api/auth'; // Remplacez par l'URL de votre API\n\n  constructor(private http: HttpClient) {}\n\n  // Méthode pour se connecter\n  login(credentials: { username: string; password: string }): Observable<any> {\n    return this.http.post(`${this.apiUrl}/signin`, credentials);\n  }\n\n  // Méthode pour s'inscrire\n  register(userData: any): Observable<any> {\n    return this.http.post(`${this.apiUrl}/signup`, userData);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}