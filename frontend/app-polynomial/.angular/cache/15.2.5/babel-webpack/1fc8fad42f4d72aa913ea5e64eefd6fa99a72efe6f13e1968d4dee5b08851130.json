{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class HistoriqueService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n    this.apiUrl = 'http://localhost:8089/historiques';\n  }\n  saveHistorique(calculId) {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    const utilisateurId = user.id;\n    if (!utilisateurId || !calculId) {\n      console.error('Utilisateur ou calcul manquant');\n      return;\n    }\n    const historique = {\n      description: 'Factorisation sauvegardée' // ou toute autre information pertinente\n    };\n\n    this.http.post(`http://localhost:8089/historiques/${utilisateurId}/${calculId}`, historique).subscribe({\n      next: response => {\n        console.log('Historique sauvegardé avec succès:', response);\n      },\n      error: error => {\n        console.error('Erreur lors de la sauvegarde de l\\'historique:', error);\n      }\n    });\n  }\n}\nHistoriqueService.ɵfac = function HistoriqueService_Factory(t) {\n  return new (t || HistoriqueService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n};\nHistoriqueService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HistoriqueService,\n  factory: HistoriqueService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAgBA,OAAM,MAAOA,iBAAiB;EAI5BC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,SAAI,GAAJD,IAAI;IAAsB,gBAAW,GAAXC,WAAW;IAHjD,WAAM,GAAG,mCAAmC;EAIpD;EACAC,cAAc,CAACC,QAAgB;IAC7B,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;IAC7D,MAAMC,aAAa,GAAGL,IAAI,CAACM,EAAE;IAE7B,IAAI,CAACD,aAAa,IAAI,CAACN,QAAQ,EAAE;MAC/BQ,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAC;MAC/C;;IAGF,MAAMC,UAAU,GAAG;MACjBC,WAAW,EAAE,2BAA2B,CAAE;KAC3C;;IAED,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,qCAAqCN,aAAa,IAAIN,QAAQ,EAAE,EAAEU,UAAU,CAAC,CACzFG,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAQ,IAAI;QACjBP,OAAO,CAACQ,GAAG,CAAC,oCAAoC,EAAED,QAAQ,CAAC;MAC7D,CAAC;MACDN,KAAK,EAAGA,KAAK,IAAI;QACfD,OAAO,CAACC,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACxE;KACD,CAAC;EACN;;AA5BWd,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;SAAjBA,iBAAiB;EAAAsB,SAAjBtB,iBAAiB;EAAAuB,YAFhB;AAAM","names":["HistoriqueService","constructor","http","authService","saveHistorique","calculId","user","JSON","parse","localStorage","getItem","utilisateurId","id","console","error","historique","description","post","subscribe","next","response","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\HP EliteBook 840 G6\\Desktop\\s1\\AC\\project\\polynomial-project\\frontend\\app-polynomial\\src\\app\\services\\historique.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\ninterface Historique {\n  id?: number;\n  expression: string;\n  resultat: string;\n  dateCalcul?: Date;\n  utilisateurId?: number;\n  calculId?: number;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoriqueService {\n  private apiUrl = 'http://localhost:8089/historiques';\n  \n\n  constructor(private http: HttpClient, private authService: AuthService) {\n  }\n  saveHistorique(calculId: number): void {\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\n    const utilisateurId = user.id;\n  \n    if (!utilisateurId || !calculId) {\n      console.error('Utilisateur ou calcul manquant');\n      return;\n    }\n  \n    const historique = {\n      description: 'Factorisation sauvegardée', // ou toute autre information pertinente\n    };\n  \n    this.http.post(`http://localhost:8089/historiques/${utilisateurId}/${calculId}`, historique)\n      .subscribe({\n        next: (response) => {\n          console.log('Historique sauvegardé avec succès:', response);\n        },\n        error: (error) => {\n          console.error('Erreur lors de la sauvegarde de l\\'historique:', error);\n        }\n      });\n  }\n  \n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}